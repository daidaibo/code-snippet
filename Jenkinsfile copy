pipeline {
    agent any

    environment {
        GIT_REPO = 'git@github.com:wawotv/app-admin.wawotv.com.git'
        CRED_ID = '3824d1bf-31cd-4744-a3e7-ff8c0bf02a24'
    }

    parameters {
        gitParameter(
            branch: '',
            branchFilter: 'origin/(.*)',
            defaultValue: 'main',
            listSize: '',
            name: 'BRANCH_NAME',
            quickFilterEnabled: false,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'GitParameterDefinition'
        )
    }

    triggers {
        // http://43.199.125.220:7788/github-webhook/
        githubPush()
    }

    stages {
        // stage('Print Environment Variables') {
        //     steps {
        //         script {
        //             params.each { param ->
        //                 echo "${param.key} = ${param.value}"
        //             }
        //         }
        //         sh 'printenv'
        //     }
        // }

        stage('获取当前工作区分支') {
            steps {
                script {
                    try {
                        def branchName = sh(returnStdout: true, script: 'git name-rev --name-only HEAD').trim()
                        env.currWorkBranch = branchName.replace('remotes/origin/', '')
                        echo "当前工作区分支: ${branchName}, env.currWorkBranch: ${env.currWorkBranch}"
                    } catch (Exception e) {
                        echo "工作区异常: ${e.message}"
                    }
                }
            }
        }

        stage('判断是否由 GitHubPush 触发') {
            steps {
                script {
                    env.isWebhookTrigger = false
                    if (currentBuild.getBuildCauses().toString().contains('GitHubPushCause')) {
                        env.isWebhookTrigger = true
                        env.GIT_BRANCH = env.currWorkBranch
                    }
                }
            }
        }

        stage('Checkout') {
            steps {
                script {
                    def branch = env.isWebhookTrigger.toBoolean() ? env.GIT_BRANCH : params.BRANCH_NAME

                    echo "params.BRANCH_NAME: ${params.BRANCH_NAME}"
                    echo "env.BRANCH_NAME: ${env.BRANCH_NAME}"
                    echo "env.GIT_BRANCH: ${env.GIT_BRANCH}"

                    env.BRANCH_NAME = branch
                    env.isProd = branch == 'main'

                    try {
                        def scmVars = checkout([
                            $class: 'GitSCM',
                            branches: [[name: branch]],
                            userRemoteConfigs: [[url: env.GIT_REPO, credentialsId: env.CRED_ID]]
                        ])
                    } catch (Exception e) {
                        echo "Failed to checkout: ${e.message}"
                    }
                }
            }
        }

        stage('Build') {
            steps {
                echo "Building branch: ${env.BRANCH_NAME}.."
                script {
                    def build = env.isProd.toBoolean() ? 'build' : 'build:qa'
                    sh """
                        sudo -u ubuntu -i <<EOF
                            source /home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh
                            node -v
                            nvm --version
                            nvm use 11.15.0
                            node -v

                            cd /var/lib/jenkins/workspace/app-admin.wawotv.com
                            sudo rm -rf dist

                            npm install
                            npm run ${build}

                            tar -zcf app-admin.wawotv.com.tar.gz dist
EOF
                    """
                    // tar --warning=no-file-changed -zcf landing.wawotv.com.tar.gz --exclude=.git --ignore-failed-read .
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying branch: ${env.BRANCH_NAME}.."
                script {
                    if (env.isProd.toBoolean()) {
                        sshPublisher(publishers: [sshPublisherDesc(
                            configName: 'wawovideo',
                            transfers: [
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '''
                                        cd /www/wwwroot/app-admin.wawotv.com
                                        sudo rm -rf *

                                        sudo mv ~/app-admin.wawotv.com.tar.gz ./

                                        sudo tar -zxf app-admin.wawotv.com.tar.gz
                                        sudo rm -rf app-admin.wawotv.com.tar.gz

                                        shopt -s dotglob
                                        sudo mv dist/* .
                                        shopt -u dotglob
                                        sudo rm -rf dist
                                    ''',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: '/',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: 'app-admin.wawotv.com.tar.gz'
                                )
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: false
                        )])
                    } else {
                        sh '''
                            cd /www/wwwroot/app-admin.dreamemovie.com
                            sudo rm -rf *

                            sudo mv /var/lib/jenkins/workspace/app-admin.wawotv.com/app-admin.wawotv.com.tar.gz /www/wwwroot/app-admin.dreamemovie.com

                            sudo tar -zxf app-admin.wawotv.com.tar.gz
                            sudo rm -rf app-admin.wawotv.com.tar.gz

                            shopt -s dotglob
                            sudo mv dist/* .
                            shopt -u dotglob
                            sudo rm -rf dist
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            // echo "env.JOB_NAME: ${env.JOB_NAME}"
            // echo "env.BUILD_NUMBER: ${env.BUILD_DISPLAY_NAME}"
            // echo "currentBuild.result: ${currentBuild.result}"
            // echo "currentBuild.duration: ${String.format("%.2f", currentBuild.duration / 1000)} s."
            script {
                if (env.isProd.toBoolean() || currentBuild.result != 'SUCCESS') {
                    def message = """
                        {
                            "msg_type": "text",
                            "content": {
                                "text": "Jenkins Job ${env.JOB_NAME} ${env.BUILD_DISPLAY_NAME} completed with status ${currentBuild.result}. Time consuming: ${String.format("%.2f", currentBuild.duration / 1000)}s."
                            }
                        }
                    """
                    def response = httpRequest(
                        url: 'https://open.feishu.cn/open-apis/bot/v2/hook/b5491d48-84b9-4325-bbc2-213ee75e46aa',
                        httpMode: 'POST',
                        acceptType: 'APPLICATION_JSON',
                        contentType: 'APPLICATION_JSON',
                        requestBody: message
                    )
                    echo "httpRequest: ${response.status} ${response.content}"
                }
            }
        }
        success {
            echo "Build and deployment succeeded!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
